var m=Object.defineProperty,k=Object.defineProperties;var b=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var V=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var _=(e,s,t)=>s in e?m(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t,r=(e,s)=>{for(var t in s||(s={}))V.call(s,t)&&_(e,t,s[t]);if(o)for(var t of o(s))y.call(s,t)&&_(e,t,s[t]);return e},u=(e,s)=>k(e,b(s));import{_ as c,c as h,d as f}from"./bi.655.81.js";const p=(e,s,t)=>{const i=r({},s),{name:l}=e.target;e.target.value!==""?i[l]=e.target.value:delete i[l],t(r({},i))},w=e=>{const s=e==null?void 0:e.VboutFields.filter(t=>t.required===!0);return s.length>0?s.map(t=>({formField:"",VboutFormField:t.key})):[{formField:"",VboutFormField:""}]},z=e=>!((e!=null&&e.field_map?e.field_map.filter(t=>!t.formField||!t.VboutFormField||!t.formField==="custom"&&!t.customValue):[]).length>0),g=(e,s,t,i,l,a)=>{if(!e.auth_token){t({auth_token:e.auth_token?"":c("Api Key can't be empty","bit-integrations")});return}t({}),a(u(r({},l),{auth:!0}));const n={auth_token:e.auth_token};h(n,"vbout_handle_authorize").then(d=>{if(d&&d.success){const F=r({},e);s(F),i(!0),a(u(r({},l),{auth:!1})),f.success(c("Authorized successfully","bit-integrations"));return}a(u(r({},l),{auth:!1})),f.error(c("Authorized failed","bit-integrations"))})},P=(e,s,t,i)=>{i(u(r({},t),{field:!0}));const l={auth_token:e.auth_token,list_id:e.list_id};h(l,"vbout_refresh_fields").then(a=>{if(a&&a.success){const n=r({},e);a.data&&(n.VboutFields=a.data),s(n),i(u(r({},t),{field:!1})),f.success(c("Fields refresh successfully","bit-integrations"));return}i(u(r({},t),{field:!1})),f.error(c("Fields refresh failed","bit-integrations"))})},M=(e,s,t,i)=>{i(u(r({},t),{list:!0}));const l={auth_token:e.auth_token};h(l,"vbout_fetch_all_lists").then(a=>{if(a&&a.success){const n=r({},e);a.data&&(n.default||(n.default={}),n.default.lists=a.data),s(n),i(u(r({},t),{list:!1})),f.success(c("List refresh successfully","bit-integrations"));return}i(u(r({},t),{list:!1})),f.error(c("List refresh failed","bit-integrations"))})};export{P as V,M as a,g as b,z as c,w as g,p as h};
